{"version":3,"sources":["API/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["getUser","userId","fetch","then","response","json","TodoList","state","todos","filterInput","filterSelect","setState","this","filteredTodos","filter","todo","title","includes","completed","className","action","type","placeholder","value","onChange","event","target","htmlFor","name","id","map","readOnly","onClick","props","onUserChange","React","Component","CurrentUser","user","createdAt","updatedAt","username","email","phone","website","prevProps","App","selectedUserId","changeUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27c61ef1.chunk.js","sourcesContent":["// eslint-disable-next-line\n\nexport function getTodos(): Promise<Todo[]> {\n  return fetch('https://mate.academy/students-api/todos')\n    .then(response => response.json());\n}\n\nexport function getUser(userId: number): Promise<User> {\n  return fetch(`https://mate.academy/students-api/users/${userId}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { getTodos } from '../../API/api';\nimport './TodoList.scss';\n\ntype State = {\n  todos: Todo[],\n  filterInput: string,\n  filterSelect: string,\n};\n\ntype Props = {\n  onUserChange: (selectedUserId: number) => void;\n};\n\nexport class TodoList extends React.Component <Props, State> {\n  state: State = {\n    todos: [],\n    filterInput: '',\n    filterSelect: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  render() {\n    const { todos, filterInput, filterSelect } = this.state;\n    let filteredTodos = todos.filter(todo => todo.title.includes(filterInput));\n\n    switch (filterSelect) {\n      case 'active':\n        filteredTodos = filteredTodos.filter(todo => todo.completed === false);\n        break;\n      case 'completed':\n        filteredTodos = filteredTodos.filter(todo => todo.completed === true);\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div className=\"TodoList__list-container\">\n          <form action=\"\">\n            Filter Todos by name\n            <input\n              type=\"text\"\n              placeholder=\"enter to filter todos\"\n              value={filterInput}\n              onChange={(event) => this.setState({ filterInput: event?.target.value })}\n            />\n            <div>\n              <label htmlFor=\"todos-select\">\n                Show todos:\n                <select\n                  name=\"todos-select\"\n                  id=\"todos-select\"\n                  value={filterSelect}\n                  onChange={(event) => this.setState({\n                    filterSelect: event.target.value,\n                  })}\n                >\n                  <option value=\"all\">all</option>\n                  <option value=\"active\">active</option>\n                  <option value=\"completed\">completed</option>\n                </select>\n              </label>\n            </div>\n          </form>\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                className={todo.completed\n                  ? 'TodoList__item TodoList__item--checked'\n                  : 'TodoList__item TodoList__item--unchecked'}\n                key={todo.id}\n              >\n                <label htmlFor={`TodoList-input-${todo.id}`}>\n                  <input type=\"checkbox\" id={`TodoList-input-${todo.id}`} readOnly />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className={todo.completed\n                    ? `TodoList__user-button\n                    button`\n                    : `TodoList__user-button\n                    TodoList__user-button--selected\n                    button`}\n                  type=\"button\"\n                  onClick={() => this.props.onUserChange(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { getUser } from '../../API/api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number;\n  onUserChange: (selectedUserId: number) => void;\n};\n\ntype State = {\n  user: User;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: {\n      id: 0,\n      createdAt: '',\n      updatedAt: '',\n      name: '',\n      username: '',\n      email: '',\n      phone: '',\n      website: '',\n    },\n  };\n\n  componentDidMount() {\n    const { userId } = this.props;\n\n    getUser(userId)\n      .then(user => this.setState({ user }));\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.userId !== prevProps.userId) {\n      getUser(this.props.userId)\n        .then(user => this.setState({ user }));\n    }\n  }\n\n  render() {\n    const {\n      id, name, email, phone,\n    } = this.state.user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          type=\"button\"\n          onClick={() => this.props.onUserChange(0)}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  changeUser = (selectedUserId: number) => {\n    this.setState({ selectedUserId });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList onUserChange={this.changeUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onUserChange={this.changeUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}